name: Java CI with Gradle

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - runner: ubuntu-24.04
            musl: true
          - runner: ubuntu-24.04-arm64 
            musl: true
          - runner: macos-13
            musl: false
          - runner: macos-14
            musl: false
          - runner: windows-latest
            musl: false
          - runner: windows-11-arm
            musl: false
      fail-fast: true
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Install musl-tools (for Linux musl build)
        if: ${{ matrix.musl }}
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
      - name: Enable musl compiler
        if: ${{ matrix.musl }}
        run: echo "CC=musl-gcc" >> $GITHUB_ENV
        
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          submodules: recursive
      - name: Set up JDK
        uses: actions/setup-java@v3.3.0
        with:
          distribution: adopt
          java-version: 21
          
      - name: Install Ninja (Windows arm64)
        if: ${{ matrix.runner == 'windows-11-arm' }}
        shell: pwsh
        run: |
          $url  = 'https://github.com/ninja-build/ninja/releases/download/v1.13.1/ninja-winarm64.zip'
          $dest = "$env:RUNNER_TEMP\ninja.zip"
          Invoke-WebRequest -Uri $url -OutFile $dest
          Expand-Archive -Path $dest -DestinationPath "$env:RUNNER_TEMP\ninja"
          "$env:RUNNER_TEMP\ninja" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          version: 1.11.1
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          version: latest
          platform: x64
      - name: Build RNNoise
        run: ./gradlew build
      - name: Upload RNNoise
        uses: actions/upload-artifact@v4
        with:
          name: RNNoise-${{ matrix.runner }}
          path: "build/libs/*.jar"
